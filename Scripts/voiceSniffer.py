import sounddevice as sd
import soundfile as sf
from datetime import datetime
import threading
import os

# folder name where we will store screenshots etc.
import localization, fileManager

FOLDER_NAME: str = "voice"


def recording(duration:int = 5):
    fs = 4800
    myrecording = sd.rec(int(duration * fs), samplerate=fs, channels=2)
    sd.wait()

    file_name = str(datetime.now()) + ".flac"
    file_name = file_name.replace(":", "_").replace("-", " ")  # we cant have ":" in file name
    # Create image folder dir in appdata if does not exist
    appdata_path = localization.Localization.get_path(localization.Localization.APPDATA) + FOLDER_NAME
    fileManager.make_road(appdata_path)
    # Save image to file
    filepath = str(appdata_path + "\\" + file_name)
    record = sf.write(filepath, myrecording, fs)
    erase_blank_records(filepath)
    return record



def start_rec(duration: int = 5):
    """
    Method starts recording sounds from microphone for specified duration.
    Code will be running in separate thread.
    :param duration: how long method should recording.
    """
    x = threading.Thread(target=recording, args=(duration,), daemon=False)
    x.start()


def erase_blank_records(filepath: str):
    """
    Erase every record from record folder that does not contain any sounds. Program determines file content by file's size
    Erase everything that has equal and less than 280 000 bits
    """
    if os.path.exists(filepath):
        if os.path.getsize(filepath) <= 280000:
            os.remove(filepath)



